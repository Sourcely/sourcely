CHANGE LOG : GREENSOCK ANIMATION PLATFORM (GSAP)
------------------------------------------------

2012-09-30:
---------------------------------------------
	- Moved change log to https://github.com/greensock/GreenSock-JS/commits/master

2012-09-19:
---------------------------------------------
	- Works around an IE8 (and earlier) bug that renders elements incorrectly when a rotational transform is applied to an object that already has an opacity/alpha filter on it. The matrix filter must come BEFORE the alpha in the "filters" list. 
	- Minor code refinements

2012-09-17
---------------------------------------------
	- Fixed issue in IE8 (and earlier) where reversing a tween that handled "backgroundPosition" (of CSSPlugin) would throw an error when it arrived at its beginning position.
	- Reworked transform code (for things like scale, rotation, x, y, skew, etc.) so that it should work with browsers that don't require a browser prefix for "transform".
	- Fixed issue that caused TweenMax.killAll() to kill the tweens in the reverse order that they were created.

2012-09-06
---------------------------------------------
	- Fixed issue that could cause zIndex:0 to get added to an object only in iOS when a transform property was tweened and the element had a z-index defined in a class instead of directly on the element itself (its style). 

2012-09-04
---------------------------------------------
	- Added killChildTweensOf() method to TweenMax that kills tweens of the child DOM elements of a particular element. 

2012-08-31
---------------------------------------------
	- Fixed issue that caused "{self}" references in a TimelineLite.staggerTo() or staggerFrom() or staggerFromTo() to always point at the first tween instead of each individual one.

2012-08-22
---------------------------------------------
	- Worked around a bug in Android 4.x default browser that causes it to ignore changes to "top" and "left" CSS properties when they are made on the same frame as any transform property (like scale, rotation, skew, etc.). 

2012-08-16
---------------------------------------------
	- Fixed error in TimelineMax's onRepeat callback
	- Fixed an issue that could cause an error in tween that was controlling a color that was set to "transparent" in IE8 or below and it was reversed and reached its beginning.

2012-07-28
---------------------------------------------
	- Fixed issue in CSSPlugin and CSSRulePlugin that caused an error in IE8 and earlier when you try tweening to a color of "transparent".

2012-07-26
---------------------------------------------
	- Worked around another Safari (iOS) bug that caused elements to randomly flicker when changing size (related to setting WebkitPerspective, so now we set WebkitBackfaceVisibility to "hidden" instead to work around 2 other Safari bugs previously mentioned)
	- Updated the Elastic eases so that you can define an amplitude below 1.

2012-07-25
---------------------------------------------
	- Worked around Safari bug that could cause elements to render incorrectly when a WebkitPerspective wasn't defined. Now a default WebkitPerspective value of 500px is applied to any element tweened with CSSPlugin (only in non-Android safari)
	- Enhanced ScrollToPlugin so that you can simply pass a number and it will assume you meant "y" (rather than having to pass {y:YOUR_VALUE})

2012-07-24
---------------------------------------------
	- Added code to helpe CSSPlugin handle zero-duration tweens that alter the className of the target so that they skip any parsing of the class and simply apply it which helps when there are transitions applied to the css class.

2012-07-23
---------------------------------------------
	- Reworked BezierPlugin's "thru" algorithm to make it more natural and fix a particular scenario when it broke down with the previous algorithm.
	- Fixed problem in BezierPlugin that could cause 1 frame to render incorrectly when a tween goes backwards (once for each segment)
	- Added "thruBasic" type to BezierPlugin (might remove, pending community feedback)
	- Fixed issue in CSSPlugin that could prevent IE8, IE7, and IE6 from interpreting the initial opacity of an element if there were spaces in its filter alpha CSS definition (like filter:alpha(opacity = 50))
	- Fixed an issue that could cause animations on the page to act as though they're not starting from exactly 0 when the page loads (like they're skipping the beginning)
	- Fixed an issue that could cause color tweens to throw an error in IE8, IE7, and IE6 if the new color is the same as the old color.

2012-07-18
---------------------------------------------
	- Added BezierPlugin
	- Added hooks in CSSPlugin to recognize Bezier tweens
	- Added conditional logic in CSSPlugin and CSSRulePlugin so that display:"none" would be applied at the END of the tween (all other non-tweening properties are applied when the tween starts)

2012-06-30
---------------------------------------------
	- Added logic to TimelineLite/Max so that if you insert/append a child that extends the duration and the timeline had already finished, it will adjust its startTime and resume playback (as long as it wasn't paused of course)

2012-06-19
---------------------------------------------
	- Fixed issue that could cause RaphaelPlugin to incorrectly render the pivot point of transforms
	- Implemented a workaround for a bug in certain (older) versions of the Android browser that could prevent transforms (like rotation) from rendering correctly by the CSSPlugin
	- Fixed issue that could cause zero-duration tweens with a delay to prematurely get removed from their parent timeline.

2012-06-05
---------------------------------------------
	- Worked around a bug in older versions of IE that could cause marginRight and/or marginBottom to render incorrectly or incorrectly deal with concurrent tweens of one of the margins while rotating the object in old versions of IE.
	- Fixed issue that could cause skewX/skewY to affect the objects scaleY in certain browsers when rotation is 0
	- Fixed missing variable in RaphaelPlugin
	- Now autoAlpha in CSSPlugin will look to see if the element starts out with a visibility of "hidden" and opacity is 1, and if so it will force opacity to 0 as a convenience. 
	- Fixed missing variable in TweenMax.killAll() method.
	- Added ability for CSSPlugin to parse numeric colors like 0xFF0000

2012-06-02
---------------------------------------------
	- Fixed problem that caused ScrollToPlugin to interpret the starting scrollTop/scrollLeft incorrectly (inverted). 
	- Added "ticker" to TweenMax for convenience. 

2012-05-29
---------------------------------------------
	- Fixed issue that could cause rotation to be read as 0 on a new tween when scaleX/scale was tweened to 0 previously.
	- Added ability for ScrollToPlugin to control the scroll of a div rather than just the window. 

2012-05-24
---------------------------------------------
	- Added SteppedEase to the EasePack
	- Fixed issue that could cause a tween to be overwritten if it is nested inside a TimelineLite/Max that's nested inside another and both are back-to-back and tween the identical value (very rare).
	- Fixed issue that could cause an incorrect conversion from pixels to % or ems (swapping horizontal percentage for vertical in a very rare case)

2012-05-23
---------------------------------------------
	- Added RaphaelPlugin that allows you to tween the properties of a Raphael element (see http://www.raphaeljs.com)

2012-05-22
---------------------------------------------
	- Fixed issue that could cause a skewY css tween to prevent scale/rotation from working properly in very specific scenarios (rare). 
	- Implemented code that snaps extremely small decimal values to 0 when being applied to CSS properties in CSSPlugin to avoid issues with a few browsers. 

2012-05-17
---------------------------------------------
	- Added ability for CSSPlugin to recognize the key word "center" within a transformOrigin value
	- Fixed issue in IE8/7/6 that could cause rotations to change the width of the target slightly after a few rotations
	- You can now define a window.GreenSockAMDPath variable (a string) that will get prepended to GreenSock-related AMD define() calls. So, for example, if you put the GreenSock .js files in a libs/greensock/ directory, you can set window.GreenSockAMDPath = "libs/greensock" so that when TweenMax is loaded, its definition will be "libs/greensock/TweenMax" instead of simply "TweenMax". This helps to make things compatible with systems like Dojo.
	- Added ScrollToPlugin
	- Changed behavior when AMD loader like RequireJS or Dojo is found - previously if one was found, the main classes like TweenLite, TweenMax, Power1, strong, etc. were NOT added to the global scope (window). However, since Dojo uses a different define() technique that appears to require only one define() per file which would fail, we now always add the main classes to the global scope so that they can be used regardless. Also added a line of code that looks for a window.GreenSockGlobals and if one is found, it will add all the globals to that object instead of window, thus you can easily control where the globals go. For example, set window.GreenSockGlobals = {} before loading any GreenSock files and none of the GreenSock code will "pollute" the global scope - they will be added to your custom object instead. 
	- Fixed missing "var" in TweenPlugin's _addTween() method
	- Changed name of the internally-used _gsRequre() method to _gsDefine() but that shouldn't affect any code you wrote because it isn't intended to be a public method. Please make sure you update ALL of your GreenSock js files, however, because they all reference that method.

2012-05-15
---------------------------------------------
	- Worked around a bug in Chrome that could cause odd transform results when the values hit no transform (translate(0px,0px) scale(1,1) rotate(0) skew(0,0)). Apparently it's a bad idea to set transform to "" after it has been something else.

2012-05-11
---------------------------------------------
	- Fixed issue that caused skewY values in CSSPlugin to always be treated as relative. So, for example, if you tweened skewY to 10 and then did another skewY of the same object to 10, it would end up looking like 20.


2012-05-06
---------------------------------------------
	- Fixed issue that could cause jQuery objects not to be tweened properly if the page was subloaded by another page that used jQuery (thus the global jQuery object reference was updated, throwing off detection of jQuery instances using instanceof).

2012-05-03
----------------------------------------------
	- Fixed issue that could cause autoAlpha not to function properly in IE7 and IE8 (due to browser bugs)

2012-05-01
----------------------------------------------
	- Added static set() method to TweenLite and TweenMax (a simple way to do a zero-duration tween)
	- Added a new getLabelsArray() method to TimelineMax
	- Fixed issue that caused a relative CSS tween to jump to its end value right away when the starting value matched exactly the amount of relative change (very rare). 

2012-04-26
----------------------------------------------
	- Improved compatibility with jQuery so that you can pass an array of jQuery instances as the target of a tween (previously you could pass a jQuery object as the target, but not an array of them). 

2012-04-23
----------------------------------------------
	- Fixed compatibility issue with RequireJS

2012-04-10
----------------------------------------------
beta 1.02
	- Added ability to tween backgroundPosition
	- Added ability to tween "border" (like border:"5px solid red")
	- Worked around Safari bug that caused "top" and "left" changes to be ignored when they are tweened at the same time as transform values (like rotation or scaleX, etc.)
	- Fixed occasional [very slight] misrendering of what should be rotation of 0 (if rounding errors caused it to be extremely small, it could appear slightly askew previously).
	- Changed behavior so that tweens with a duration of 0 and delay of 0 will default to immediateRender:true